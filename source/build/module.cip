import root::debug::any
import root::internal::any

public label build: Function(compiler: $Data, top: $Data) -> Status<Data> := {

    if Some: pipeline == confirm?(compiler.index($keyword?("pipeline"))) {

        label pipeline_items := unpack_list?(pipeline, string?("pipeline needs to be a list"))
        label current_top := mutable clone?(top)
        label build := mutable map?()

        iterate pipeline_items as current_pass {
            ensure?(current_pass.is_literal(), string?("pass may only be a literal"))
            current_top := mutable confirm?(current_top.do_pass($Some(current_pass), $compiler, $build, $context))
        }

        return success?(implied Some(build))
    }

    return success?(implied map?())
}

public label build_instruction: Function(compiler: $Data, top: $Data) -> Status<Data> := {
    return build(compiler, top)
}
